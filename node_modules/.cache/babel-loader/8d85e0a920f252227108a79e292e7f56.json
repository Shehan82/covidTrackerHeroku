{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shehan/Documents/git/covid-19-tracker/covid_tracker/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Button, FormControl, InputLabel, Input, FormHelperText, MenuItem, Select, Card, CardContent, Table } from '@material-ui/core';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Tdata from './Tdata';\nimport { sortData } from './util';\nimport Graph from './Graph';\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('WorldWide');\n  const [coronaInfo, setCoronaInfo] = useState({});\n  const [tableDate, setTableData] = useState([]);\n  const [url, setUrl] = useState(``);\n\n  /*#__PURE__*/\n  _jsxDEV(Table, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n\n  useEffect(() => {\n    // send a request , wait and do\n    const getCountries = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        console.log(data);\n      });\n      fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n        setCoronaInfo(data);\n      });\n    };\n\n    getCountries();\n    setUrl(`https://disease.sh/v3/covid-19/historical/Sl?lastdays=30`);\n  }, []);\n\n  const countryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === \"WorldWide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      setCountry(countryCode);\n      setCoronaInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid 19 tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            onChange: countryChange,\n            variant: \"outlined\",\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"WorldWide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), countries.map(x => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: x.value,\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Corona cases\",\n          cases: coronaInfo.todayCases,\n          total: coronaInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Corona recovery\",\n          cases: coronaInfo.todayRecovered,\n          total: coronaInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Corona deaths\",\n          cases: coronaInfo.todayDeaths,\n          total: coronaInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {\n        link: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live cases by country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Tdata, {\n          countries: tableDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"World wide new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jk/FMl48/1X4667KgiZEz6qP7rM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shehan/Documents/git/covid-19-tracker/covid_tracker/src/App.jsx"],"names":["Button","FormControl","InputLabel","Input","FormHelperText","MenuItem","Select","Card","CardContent","Table","useState","useEffect","InfoBox","Map","Tdata","sortData","Graph","App","countries","setCountries","country","setCountry","coronaInfo","setCoronaInfo","tableDate","setTableData","url","setUrl","getCountries","fetch","then","response","json","data","map","name","value","countryInfo","iso2","sortedData","console","log","countryChange","event","countryCode","target","x","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Button, FormControl, InputLabel, Input, FormHelperText, MenuItem , Select, Card, CardContent, Table} from '@material-ui/core';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Tdata from './Tdata';\nimport {sortData} from './util';\nimport Graph from './Graph';\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('WorldWide');\n  const [coronaInfo, setCoronaInfo] = useState({});\n  const [tableDate, setTableData] = useState([]);\n  const [url, setUrl] = useState(``);\n\n  \n  <Table/>\n  useEffect(()=>{\n    // send a request , wait and do\n    const getCountries = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response)=> response.json())\n      .then((data)=>{\n        const countries = data.map((country)=>(\n          {\n            name:country.country,\n            value:country.countryInfo.iso2\n          }\n        ));\n        setCountries(countries);\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        console.log(data);\n      })\n      fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then((data)=>{\n        \n        setCoronaInfo(data);\n\n      })\n    }\n\n    getCountries();\n    setUrl(`https://disease.sh/v3/covid-19/historical/Sl?lastdays=30`);\n  }, []);\n\n  const countryChange = async (event) =>\n  {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n   \n    const url = \n      countryCode === \"WorldWide\"\n      ? \"https://disease.sh/v3/covid-19/all\"\n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n      await fetch(url)\n      .then((response)=>response.json())\n      .then((data) =>  {\n        console.log(data);\n        setCountry(countryCode);\n        setCoronaInfo(data);\n      })\n\n  }\n\n  return (\n    <div className=\"app\">\n\n      <div className=\"app__left\">\n          <div className=\"app__header\">\n            <h1>Covid 19 tracker</h1>\n            <FormControl className=\"app__dropdown\">\n              <Select onChange={countryChange} variant=\"outlined\" value={country}>\n                <MenuItem  value=\"WorldWide\">Worldwide</MenuItem>\n                {countries.map(x =>(\n                  <MenuItem value={x.value}>{x.name}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox title=\"Corona cases\" cases={coronaInfo.todayCases} total={coronaInfo.cases}/>\n          <InfoBox title=\"Corona recovery\" cases={coronaInfo.todayRecovered} total={coronaInfo.recovered}/>\n          <InfoBox title=\"Corona deaths\" cases={coronaInfo.todayDeaths} total={coronaInfo.deaths}/>\n          {/* small info boxes cases */}\n          {/* small info boxes death */}\n          {/* small info boxes recovery */}\n\n        </div>\n        \n\n          {/* <Map/> */}\n          <Graph link={url}/>\n\n          </div>\n\n          <Card className=\"app__right\">\n            <CardContent>\n                  <h3>Live cases by country</h3>\n                  <Tdata countries={tableDate} />\n       \n                  <h3>World wide new</h3>\n                 \n                  \n            </CardContent>\n          </Card>\n \n    \n      \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}